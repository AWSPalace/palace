diff --git a/CMakeLists.txt b/CMakeLists.txt
index 7f87c78..82bbc71 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -45,17 +45,9 @@ endif()
 
 if(parallel)
   find_package(MPI COMPONENTS C Fortran REQUIRED)
-  include(cmake/scalapack.cmake)
 
   set(NUMERIC_LIBS ${SCALAPACK_LIBRARIES} ${LAPACK_LIBRARIES})
 
-  if(find_static AND NOT WIN32 AND
-    MKL IN_LIST LAPACK_VENDOR AND
-    CMAKE_VERSION VERSION_GREATER_EQUAL 3.24
-    )
-    set(NUMERIC_LIBS $<LINK_GROUP:RESCAN,${NUMERIC_LIBS}>)
-  endif()
-
   # avoid MPICH -fallow flag leakage
   set(NUMERIC_INC ${SCALAPACK_INCLUDE_DIRS} ${LAPACK_INCLUDE_DIRS} ${MPI_Fortran_INCLUDE_DIRS})
   list(APPEND NUMERIC_LIBS ${MPI_Fortran_LIBRARIES} MPI::MPI_C)
@@ -78,7 +70,7 @@ if(scotch)
 endif()
 
 if(parmetis)
-  find_package(METIS REQUIRED COMPONENTS parallel)
+  find_package(METIS REQUIRED COMPONENTS ParMETIS)
   list(APPEND ORDERING_DEFS parmetis metis)
   list(APPEND ORDERING_LIBS METIS::METIS)
 elseif(metis)
@@ -89,15 +81,6 @@ endif()
 
 list(APPEND ORDERING_LIBS pord)
 
-install(FILES
-${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindLAPACK.cmake
-${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindSCALAPACK.cmake
-${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindMETIS.cmake
-${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindScotch.cmake
-${CMAKE_CURRENT_SOURCE_DIR}/cmake/FindMUMPS.cmake
-DESTINATION cmake
-)
-
 message(STATUS "MUMPS ORDERING_DEFS: ${ORDERING_DEFS}")
 message(STATUS "MUMPS ORDERING_LIBS: ${ORDERING_LIBS}")
 
@@ -137,8 +120,6 @@ message(STATUS "Configured MUMPS ${MUMPS_UPSTREAM_VERSION} source in ${mumps_SOU
 
 include(cmake/summary.cmake)
 
-include(cmake/install.cmake)
-
 if(NOT PROJECT_SOURCE_DIR STREQUAL PROJECT_BINARY_DIR)
   file(GENERATE OUTPUT .gitignore CONTENT "*")
 endif()
diff --git a/cmake/FindMETIS.cmake b/cmake/FindMETIS.cmake
index 0d866df..ee9ea8e 100644
--- a/cmake/FindMETIS.cmake
+++ b/cmake/FindMETIS.cmake
@@ -26,24 +26,24 @@ METIS_INCLUDE_DIRS
 #]=======================================================================]
 
 
-if(parallel IN_LIST METIS_FIND_COMPONENTS)
+if(ParMETIS IN_LIST METIS_FIND_COMPONENTS)
   find_library(PARMETIS_LIBRARY
-    NAMES parmetis
-    PATH_SUFFIXES METIS libmetis
-    DOC "ParMETIS library"
-    )
+  NAMES parmetis
+  PATH_SUFFIXES METIS libmetis
+  DOC "ParMETIS library"
+  )
   if(PARMETIS_LIBRARY)
-    set(METIS_parallel_FOUND true)
+    set(METIS_ParMETIS_FOUND true)
   endif()
 endif()
 
 find_library(METIS_LIBRARY
-  NAMES metis
-  PATH_SUFFIXES METIS libmetis
-  DOC "METIS library"
-  )
+NAMES metis
+PATH_SUFFIXES METIS libmetis
+DOC "METIS library"
+)
 
-if(parallel IN_LIST METIS_FIND_COMPONENTS)
+if(ParMETIS IN_LIST METIS_FIND_COMPONENTS)
   set(metis_inc parmetis.h)
 else()
   set(metis_inc metis.h)
@@ -55,25 +55,25 @@ PATH_SUFFIXES METIS openmpi-x86_64 mpich-x86_64
 DOC "METIS include directory"
 )
 
+set(METIS_LIBRARIES ${PARMETIS_LIBRARY} ${METIS_LIBRARY})
+  
 include(FindPackageHandleStandardArgs)
 find_package_handle_standard_args(METIS
-REQUIRED_VARS METIS_LIBRARY METIS_INCLUDE_DIR
+REQUIRED_VARS METIS_LIBRARIES METIS_INCLUDE_DIR
 HANDLE_COMPONENTS
 )
 
 if(METIS_FOUND)
+  set(METIS_INCLUDE_DIRS ${METIS_INCLUDE_DIR})
 
-set(METIS_LIBRARIES ${PARMETIS_LIBRARY} ${METIS_LIBRARY})
-set(METIS_INCLUDE_DIRS ${METIS_INCLUDE_DIR})
-
-message(VERBOSE "METIS libraries: ${METIS_LIBRARIES}
-METIS include directories: ${METIS_INCLUDE_DIRS}")
+  message(VERBOSE "METIS libraries: ${METIS_LIBRARIES}
+  METIS include directories: ${METIS_INCLUDE_DIRS}")
 
-if(NOT TARGET METIS::METIS)
-  add_library(METIS::METIS INTERFACE IMPORTED)
-  set_property(TARGET METIS::METIS PROPERTY INTERFACE_LINK_LIBRARIES "${METIS_LIBRARIES}")
-  set_property(TARGET METIS::METIS PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${METIS_INCLUDE_DIR}")
-endif()
+  if(NOT TARGET METIS::METIS)
+    add_library(METIS::METIS INTERFACE IMPORTED)
+    set_property(TARGET METIS::METIS PROPERTY INTERFACE_LINK_LIBRARIES "${METIS_LIBRARIES}")
+    set_property(TARGET METIS::METIS PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${METIS_INCLUDE_DIR}")
+  endif()
 endif(METIS_FOUND)
 
 mark_as_advanced(METIS_INCLUDE_DIR METIS_LIBRARY PARMETIS_LIBRARY)
diff --git a/cmake/FindScotch.cmake b/cmake/FindScotch.cmake
index 39e378d..1066d99 100644
--- a/cmake/FindScotch.cmake
+++ b/cmake/FindScotch.cmake
@@ -18,7 +18,7 @@
 #  COMPONENTS:
 #
 #  * ESMUMPS: detect Scotch esmumps interface
-#  * parallel: detect parallel (MPI) Scotch
+#  * PTScotch: detect parallel (MPI) Scotch
 #
 # This module finds headers and scotch library.
 # Results are reported in variables:
@@ -61,7 +61,7 @@ if(ESMUMPS IN_LIST Scotch_FIND_COMPONENTS)
   list(INSERT scotch_names 0 esmumps)
 endif()
 
-if(parallel IN_LIST Scotch_FIND_COMPONENTS)
+if(PTScotch IN_LIST Scotch_FIND_COMPONENTS)
   list(INSERT scotch_names 0 ptscotch ptscotcherr)
   if(ESMUMPS IN_LIST Scotch_FIND_COMPONENTS)
     list(INSERT scotch_names 0 ptesmumps)
@@ -79,10 +79,10 @@ foreach(l IN LISTS scotch_names)
   mark_as_advanced(Scotch_${l}_LIBRARY)
 endforeach()
 
-if(parallel IN_LIST Scotch_FIND_COMPONENTS)
+if(PTScotch IN_LIST Scotch_FIND_COMPONENTS)
   if(Scotch_ptesmumps_LIBRARY AND Scotch_ptscotch_LIBRARY)
     set(Scotch_ESMUMPS_FOUND true)
-    set(Scotch_parallel_FOUND true)
+    set(Scotch_PTScotch_FOUND true)
   endif()
 elseif(Scotch_esmumps_LIBRARY)
   set(Scotch_ESMUMPS_FOUND true)
@@ -95,16 +95,16 @@ HANDLE_COMPONENTS
 )
 
 if(Scotch_FOUND)
-set(Scotch_INCLUDE_DIRS ${Scotch_INCLUDE_DIR})
+  set(Scotch_INCLUDE_DIRS ${Scotch_INCLUDE_DIR})
 
-message(VERBOSE "Scotch libraries: ${Scotch_LIBRARIES}
-Scotch include directories: ${Scotch_INCLUDE_DIRS}")
+  message(VERBOSE "Scotch libraries: ${Scotch_LIBRARIES}
+  Scotch include directories: ${Scotch_INCLUDE_DIRS}")
 
-if(NOT TARGET Scotch::Scotch)
-  add_library(Scotch::Scotch INTERFACE IMPORTED)
-  set_property(TARGET Scotch::Scotch PROPERTY INTERFACE_LINK_LIBRARIES "${Scotch_LIBRARIES}")
-  set_property(TARGET Scotch::Scotch PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${Scotch_INCLUDE_DIR}")
-endif()
+  if(NOT TARGET Scotch::Scotch)
+    add_library(Scotch::Scotch INTERFACE IMPORTED)
+    set_property(TARGET Scotch::Scotch PROPERTY INTERFACE_LINK_LIBRARIES "${Scotch_LIBRARIES}")
+    set_property(TARGET Scotch::Scotch PROPERTY INTERFACE_INCLUDE_DIRECTORIES "${Scotch_INCLUDE_DIR}")
+  endif()
 endif(Scotch_FOUND)
 
 mark_as_advanced(Scotch_INCLUDE_DIR)
diff --git a/cmake/install.cmake b/cmake/install.cmake
deleted file mode 100644
index 8129655..0000000
--- a/cmake/install.cmake
+++ /dev/null
@@ -1,43 +0,0 @@
-# --- BOILERPLATE: install / packaging
-
-include(CMakePackageConfigHelpers)
-
-configure_package_config_file(${CMAKE_CURRENT_LIST_DIR}/config.cmake.in
-${CMAKE_CURRENT_BINARY_DIR}/cmake/${PROJECT_NAME}Config.cmake
-INSTALL_DESTINATION cmake
-)
-
-write_basic_package_version_file(
-${CMAKE_CURRENT_BINARY_DIR}/cmake/${PROJECT_NAME}ConfigVersion.cmake
-COMPATIBILITY SameMajorVersion
-)
-
-install(EXPORT ${PROJECT_NAME}-targets
-NAMESPACE ${PROJECT_NAME}::
-DESTINATION cmake
-)
-
-install(FILES
-${CMAKE_CURRENT_BINARY_DIR}/cmake/${PROJECT_NAME}Config.cmake
-${CMAKE_CURRENT_BINARY_DIR}/cmake/${PROJECT_NAME}ConfigVersion.cmake
-DESTINATION cmake
-)
-
-# --- CPack
-
-set(CPACK_GENERATOR "TBZ2")
-set(CPACK_SOURCE_GENERATOR "TBZ2")
-set(CPACK_RESOURCE_FILE_LICENSE "${CMAKE_CURRENT_SOURCE_DIR}/LICENSE")
-set(CPACK_RESOURCE_FILE_README "${CMAKE_CURRENT_SOURCE_DIR}/README.md")
-set(CPACK_PACKAGE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/package)
-
-# not .gitignore as its regex syntax is more advanced than CMake
-set(CPACK_SOURCE_IGNORE_FILES .git/ .github/ .vscode/ _CPack_Packages/
-${CMAKE_BINARY_DIR}/ ${PROJECT_BINARY_DIR}/
-)
-
-install(FILES ${CPACK_RESOURCE_FILE_README} ${CPACK_RESOURCE_FILE_LICENSE}
-DESTINATION share/docs/${PROJECT_NAME}
-)
-
-include(CPack)
diff --git a/cmake/lapack.cmake b/cmake/lapack.cmake
index d5e6957..77eb7ca 100644
--- a/cmake/lapack.cmake
+++ b/cmake/lapack.cmake
@@ -2,30 +2,9 @@
 
 include(CheckFortranSourceCompiles)
 
-if(NOT DEFINED LAPACK_VENDOR AND DEFINED ENV{MKLROOT})
-  set(LAPACK_VENDOR MKL)
-endif()
-
-if(find_static)
-  list(APPEND LAPACK_VENDOR STATIC)
-endif()
-
-find_package(LAPACK REQUIRED COMPONENTS ${LAPACK_VENDOR})
-
 # GEMMT is recommeded in MUMPS User Manual if available
 if(gemmt)
 
-set(CMAKE_REQUIRED_INCLUDES ${LAPACK_INCLUDE_DIRS})
-
-if(find_static AND NOT WIN32 AND
-  MKL IN_LIST LAPACK_VENDOR AND
-  CMAKE_VERSION VERSION_GREATER_EQUAL 3.24
-  )
-  set(CMAKE_REQUIRED_LIBRARIES $<LINK_GROUP:RESCAN,${LAPACK_LIBRARIES}>)
-else()
-  set(CMAKE_REQUIRED_LIBRARIES ${LAPACK_LIBRARIES})
-endif()
-
 if(BUILD_DOUBLE)
 check_fortran_source_compiles(
 "program check
diff --git a/cmake/scalapack.cmake b/cmake/scalapack.cmake
deleted file mode 100644
index 627b8d0..0000000
--- a/cmake/scalapack.cmake
+++ /dev/null
@@ -1,15 +0,0 @@
-if(NOT DEFINED SCALAPACK_VENDOR AND DEFINED ENV{MKLROOT})
-  set(SCALAPACK_VENDOR MKL)
-endif()
-
-if(MKL IN_LIST SCALAPACK_VENDOR)
-  if(intsize64)
-    list(APPEND SCALAPACK_VENDOR MKL64)
-  endif()
-endif()
-
-if(find_static)
-  list(APPEND SCALAPACK_VENDOR STATIC)
-endif()
-
-find_package(SCALAPACK REQUIRED COMPONENTS ${SCALAPACK_VENDOR})
diff --git a/options.cmake b/options.cmake
index c14d25a..b02f825 100644
--- a/options.cmake
+++ b/options.cmake
@@ -2,8 +2,6 @@ include(GNUInstallDirs)
 
 message(STATUS "${PROJECT_NAME} ${PROJECT_VERSION}  CMake ${CMAKE_VERSION}  Toolchain ${CMAKE_TOOLCHAIN_FILE}")
 
-option(find_static "Find static libraries for Lapack and Scalapack (default shared then static search)")
-
 if(local)
   get_filename_component(local ${local} ABSOLUTE)
 
